(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{194:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return i})),n.d(e,"rightToc",(function(){return r})),n.d(e,"default",(function(){return s}));n(210),n(211),n(207),n(212),n(213),n(214);var a=n(208);function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}var i={id:"v0-10-api-migration",title:"v0.10 API Migration"},r=[{value:"Quick Overview",id:"quick-overview",children:[{value:"Creating an entity",id:"creating-an-entity",children:[]},{value:"Getting an Entity",id:"getting-an-entity",children:[]},{value:"Decorator Strategy arguments change",id:"decorator-strategy-arguments-change",children:[]},{value:"Decorator Strategies that find Entities",id:"decorator-strategies-that-find-entities",children:[]}]},{value:"More Information",id:"more-information",children:[]}],o={rightToc:r},l="wrapper";function s(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,c={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(c[n]=t[n]);return c}(t,["components"]);return Object(a.b)(l,c({},o,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The Draft.js v0.10 release includes a change to the API for managing\n",Object(a.b)("inlineCode",{parentName:"p"},"DraftEntity")," data; the global 'DraftEntity' module is being deprecated and\n",Object(a.b)("inlineCode",{parentName:"p"},"DraftEntity")," instances will be managed as part of ",Object(a.b)("inlineCode",{parentName:"p"},"ContentState"),". This means\nthat the methods which were previously accessed on ",Object(a.b)("inlineCode",{parentName:"p"},"DraftEntity")," are now moved\nto the ",Object(a.b)("inlineCode",{parentName:"p"},"ContentState")," record."),Object(a.b)("p",null,"This API improvement unlocks the path for many benefits that will be available in v0.11:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"DraftEntity instances and storage will be immutable."),Object(a.b)("li",{parentName:"ul"},"DraftEntity will no longer be globally accessible."),Object(a.b)("li",{parentName:"ul"},"Any changes to entity data will trigger a re-render.")),Object(a.b)("h2",{id:"quick-overview"},"Quick Overview"),Object(a.b)("p",null,"Here is a quick list of what has been changed and how to update your application:"),Object(a.b)("h3",{id:"creating-an-entity"},"Creating an entity"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Old Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const entityKey = Entity.create(\n  urlType,\n  'IMMUTABLE',\n  {src: urlValue},\n);\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"New Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const contentStateWithEntity = contentState.createEntity(\n  urlType,\n  'IMMUTABLE',\n  {src: urlValue},\n);\nconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n")),Object(a.b)("h3",{id:"getting-an-entity"},"Getting an Entity"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Old Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const entityInstance = Entity.get(entityKey);\n// entityKey is a string key associated with that entity when it was created\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"New Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const entityInstance = contentState.getEntity(entityKey);\n// entityKey is a string key associated with that entity when it was created\n")),Object(a.b)("h3",{id:"decorator-strategy-arguments-change"},"Decorator Strategy arguments change"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Old Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const compositeDecorator = new CompositeDecorator([\n  {\n    strategy: (contentBlock, callback) => exampleFindTextRange(contentBlock, callback),\n    component: ExampleTokenComponent,\n  },\n]);\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"New Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const compositeDecorator = new CompositeDecorator([\n  {\n    strategy: (\n      contentBlock,\n      callback,\n      contentState\n    ) => exampleFindTextRange(contentBlock, callback, contentState),\n    component: ExampleTokenComponent,\n  },\n]);\n")),Object(a.b)("p",null,"Note that ExampleTokenComponent will receive contentState as a prop."),Object(a.b)("p",null,"Why does the 'contentState' get passed into the decorator strategy now? Because we may need it if our strategy is to  find certain entities in the contentBlock:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const mutableEntityStrategy = function(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(\n    (character) => {\n      const entityKey = character.getEntity();\n      if (entityKey === null) {\n        return false;\n      }\n      // To look for certain types of entities,\n      // or entities with a certain mutability,\n      // you may need to get the entity from contentState.\n      // In this example we get only mutable entities.\n      return contentState.getEntity(entityKey).getMutability() === 'MUTABLE';\n    },\n    callback,\n  );\n};\n")),Object(a.b)("h3",{id:"decorator-strategies-that-find-entities"},"Decorator Strategies that find Entities"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Old Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"function findLinkEntities(contentBlock, callback) {\n  contentBlock.findEntityRanges(\n    (character) => {\n      const entityKey = character.getEntity();\n      return (\n        entityKey !== null &&\n        Entity.get(entityKey).getType() === 'LINK'\n      );\n    },\n    callback,\n  );\n};\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"New Syntax")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"function findLinkEntities(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(\n    (character) => {\n      const entityKey = character.getEntity();\n      return (\n        entityKey !== null &&\n        contentState.getEntity(entityKey).getType() === 'LINK'\n      );\n    },\n    callback,\n  );\n};\n")),Object(a.b)("h2",{id:"more-information"},"More Information"),Object(a.b)("p",null,"For more information see the ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/facebook/draft-js/tree/master/examples/draft-0-10-0"}),"updated examples"),"."))}s.isMDXComponent=!0}}]);