(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{175:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return c}));n(210),n(211),n(207),n(212),n(213),n(214);var a=n(208);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={id:"advanced-topics-inline-styles",title:"Complex Inline Styles"},i=[{value:"Model",id:"model",children:[]},{value:"Overlapping Styles",id:"overlapping-styles",children:[]},{value:"Mapping a style string to CSS",id:"mapping-a-style-string-to-css",children:[]}],l={rightToc:i},s="wrapper";function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(s,r({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Within your editor, you may wish to provide a wide variety of inline style\nbehavior that goes well beyond the bold/italic/underline basics. For instance,\nyou may want to support variety with color, font families, font sizes, and more.\nFurther, your desired styles may overlap or be mutually exclusive."),Object(a.b)("p",null,"The ",Object(a.b)("a",r({parentName:"p"},{href:"http://github.com/facebook/draft-js/tree/master/examples/draft-0-10-0/rich"}),"Rich Editor")," and\n",Object(a.b)("a",r({parentName:"p"},{href:"http://github.com/facebook/draft-js/tree/master/examples/draft-0-10-0/color"}),"Colorful Editor"),"\nexamples demonstrate complex inline style behavior in action."),Object(a.b)("h2",{id:"model"},"Model"),Object(a.b)("p",null,"Within the Draft model, inline styles are represented at the character level,\nusing an immutable ",Object(a.b)("inlineCode",{parentName:"p"},"OrderedSet")," to define the list of styles to be applied to\neach character. These styles are identified by string. (See ",Object(a.b)("a",r({parentName:"p"},{href:"/docs/api-reference-character-metadata"}),"CharacterMetadata"),"\nfor details.)"),Object(a.b)("p",null,'For example, consider the text "Hello ',Object(a.b)("strong",{parentName:"p"},"world"),'". The first six characters of\nthe string are represented by the empty set, ',Object(a.b)("inlineCode",{parentName:"p"},"OrderedSet()"),". The final five\ncharacters are represented by ",Object(a.b)("inlineCode",{parentName:"p"},"OrderedSet.of('BOLD')"),". For convenience, we can\nthink of these ",Object(a.b)("inlineCode",{parentName:"p"},"OrderedSet")," objects as arrays, though in reality we aggressively\nreuse identical immutable objects."),Object(a.b)("p",null,"In essence, our styles are:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"[\n  [], // H\n  [], // e\n  // ...\n  ['BOLD'], // w\n  ['BOLD'], // o\n  // etc.\n];\n")),Object(a.b)("h2",{id:"overlapping-styles"},"Overlapping Styles"),Object(a.b)("p",null,"Now let's say that we wish to make the middle range of characters italic as well:\nHe",Object(a.b)("em",{parentName:"p"},"llo")," ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("em",{parentName:"strong"},"wo"),"rld"),". This operation can be performed via the\n",Object(a.b)("a",r({parentName:"p"},{href:"/docs/api-reference-modifier"}),"Modifier")," API."),Object(a.b)("p",null,"The end result will accommodate the overlap by including ",Object(a.b)("inlineCode",{parentName:"p"},"'ITALIC'")," in the\nrelevant ",Object(a.b)("inlineCode",{parentName:"p"},"OrderedSet")," objects as well."),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"[\n  [], // H\n  [], // e\n  ['ITALIC'], // l\n  // ...\n  ['BOLD', 'ITALIC'], // w\n  ['BOLD', 'ITALIC'], // o\n  ['BOLD'], // r\n  // etc.\n];\n")),Object(a.b)("p",null,"When determining how to render inline-styled text, Draft will identify\ncontiguous ranges of identically styled characters and render those characters\ntogether in styled ",Object(a.b)("inlineCode",{parentName:"p"},"span")," nodes."),Object(a.b)("h2",{id:"mapping-a-style-string-to-css"},"Mapping a style string to CSS"),Object(a.b)("p",null,"By default, ",Object(a.b)("inlineCode",{parentName:"p"},"Editor")," provides support for a basic list of inline styles:\n",Object(a.b)("inlineCode",{parentName:"p"},"'BOLD'"),", ",Object(a.b)("inlineCode",{parentName:"p"},"'ITALIC'"),", ",Object(a.b)("inlineCode",{parentName:"p"},"'UNDERLINE'"),", and ",Object(a.b)("inlineCode",{parentName:"p"},"'CODE'"),". These are mapped to plain CSS\nstyle objects, which are used to apply styles to the relevant ranges."),Object(a.b)("p",null,"For your editor, you may define custom style strings to include with these\ndefaults, or you may override the default style objects for the basic styles."),Object(a.b)("p",null,"Within your ",Object(a.b)("inlineCode",{parentName:"p"},"Editor")," use case, you may provide the ",Object(a.b)("inlineCode",{parentName:"p"},"customStyleMap")," prop\nto define your style objects. (See\n",Object(a.b)("a",r({parentName:"p"},{href:"http://github.com/facebook/draft-js/tree/master/examples/draft-0-10-0/color"}),"Colorful Editor"),"\nfor a live example.)"),Object(a.b)("p",null,"For example, you may want to add a ",Object(a.b)("inlineCode",{parentName:"p"},"'STRIKETHROUGH'")," style. To do so, define a\ncustom style map:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-js"}),"import {Editor} from 'draft-js';\n\nconst styleMap = {\n  'STRIKETHROUGH': {\n    textDecoration: 'line-through',\n  },\n};\n\nclass MyEditor extends React.Component {\n  // ...\n  render() {\n    return (\n      <Editor\n        customStyleMap={styleMap}\n        editorState={this.state.editorState}\n        ...\n      />\n    );\n  }\n}\n")),Object(a.b)("p",null,"When rendered, the ",Object(a.b)("inlineCode",{parentName:"p"},"textDecoration: line-through")," style will be applied to all\ncharacter ranges with the ",Object(a.b)("inlineCode",{parentName:"p"},"STRIKETHROUGH")," style."))}c.isMDXComponent=!0}}]);