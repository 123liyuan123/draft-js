(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{201:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));n(210),n(211),n(207),n(212),n(213),n(214);var o=n(208);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var c={id:"api-reference-rich-utils",title:"RichUtils"},l=[{value:"Static Methods",id:"static-methods",children:[{value:"<code>currentBlockContainsLink()</code>",id:"currentblockcontainslink",children:[]},{value:"<code>getCurrentBlockType()</code>",id:"getcurrentblocktype",children:[]},{value:"<code>handleKeyCommand()</code>",id:"handlekeycommand",children:[]},{value:"<code>insertSoftNewline()</code>",id:"insertsoftnewline",children:[]},{value:"<code>onBackspace()</code>",id:"onbackspace",children:[]},{value:"<code>onDelete()</code>",id:"ondelete",children:[]},{value:"<code>onTab()</code>",id:"ontab",children:[]},{value:"<code>toggleBlockType()</code>",id:"toggleblocktype",children:[]},{value:"<code>toggleCode()</code>",id:"togglecode",children:[]},{value:"<code>toggleInlineStyle()</code>",id:"toggleinlinestyle",children:[]},{value:"<code>toggleLink()</code>",id:"togglelink",children:[]},{value:"<code>tryToRemoveBlockStyle()</code>",id:"trytoremoveblockstyle",children:[]}]}],i={rightToc:l},r="wrapper";function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(r,a({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"RichUtils")," module is a static set of utility functions for rich text\nediting."),Object(o.b)("p",null,"In each case, these methods accept ",Object(o.b)("inlineCode",{parentName:"p"},"EditorState")," objects with relevant\nparameters and return ",Object(o.b)("inlineCode",{parentName:"p"},"EditorState")," objects."),Object(o.b)("h2",{id:"static-methods"},"Static Methods"),Object(o.b)("h3",{id:"currentblockcontainslink"},Object(o.b)("inlineCode",{parentName:"h3"},"currentBlockContainsLink()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"currentBlockContainsLink(\n  editorState: EditorState\n): boolean\n")),Object(o.b)("h3",{id:"getcurrentblocktype"},Object(o.b)("inlineCode",{parentName:"h3"},"getCurrentBlockType()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"getCurrentBlockType(\n  editorState: EditorState\n): string\n")),Object(o.b)("h3",{id:"handlekeycommand"},Object(o.b)("inlineCode",{parentName:"h3"},"handleKeyCommand()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"handleKeyCommand(\n  editorState: EditorState,\n  command: string\n): ?EditorState\n")),Object(o.b)("h3",{id:"insertsoftnewline"},Object(o.b)("inlineCode",{parentName:"h3"},"insertSoftNewline()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"insertSoftNewline(\n  editorState: EditorState\n): EditorState\n")),Object(o.b)("h3",{id:"onbackspace"},Object(o.b)("inlineCode",{parentName:"h3"},"onBackspace()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"onBackspace(\n  editorState: EditorState\n): EditorState?\n")),Object(o.b)("h3",{id:"ondelete"},Object(o.b)("inlineCode",{parentName:"h3"},"onDelete()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"onDelete(\n  editorState: EditorState\n): EditorState?\n")),Object(o.b)("h3",{id:"ontab"},Object(o.b)("inlineCode",{parentName:"h3"},"onTab()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"onTab(\n  event: SyntheticEvent,\n  editorState: EditorState,\n  maxDepth: integer\n): EditorState\n")),Object(o.b)("h3",{id:"toggleblocktype"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleBlockType()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"toggleBlockType(\n  editorState: EditorState,\n  blockType: string\n): EditorState\n")),Object(o.b)("h3",{id:"togglecode"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleCode()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"toggleCode(\n  editorState: EditorState\n): EditorState\n")),Object(o.b)("h3",{id:"toggleinlinestyle"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleInlineStyle()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"toggleInlineStyle(\n  editorState: EditorState,\n  inlineStyle: string\n): EditorState\n")),Object(o.b)("p",null,"Toggle the specified inline style for the selection. If the\nuser's selection is collapsed, apply or remove the style for the\ninternal state. If it is not collapsed, apply the change directly\nto the document state."),Object(o.b)("h3",{id:"togglelink"},Object(o.b)("inlineCode",{parentName:"h3"},"toggleLink()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"toggleLink(\n  editorState: EditorState,\n  targetSelection: SelectionState,\n  entityKey: string\n): EditorState\n")),Object(o.b)("h3",{id:"trytoremoveblockstyle"},Object(o.b)("inlineCode",{parentName:"h3"},"tryToRemoveBlockStyle()")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-js"}),"tryToRemoveBlockStyle(\n  editorState: EditorState\n): ContentState?\n")))}d.isMDXComponent=!0}}]);