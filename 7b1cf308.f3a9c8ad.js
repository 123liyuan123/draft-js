(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{165:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"rightToc",(function(){return r})),n.d(t,"default",(function(){return s}));n(210),n(211),n(207),n(212),n(213),n(214);var a=n(208);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={id:"api-reference-selection-state",title:"SelectionState"},r=[{value:"Keys and Offsets",id:"keys-and-offsets",children:[]},{value:"Start/End vs. Anchor/Focus",id:"startend-vs-anchorfocus",children:[]},{value:"Overview",id:"overview",children:[]},{value:"Static Methods",id:"static-methods",children:[{value:"<code>createEmpty()</code>",id:"createempty",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>getStartKey()</code>",id:"getstartkey",children:[]},{value:"<code>getStartOffset()</code>",id:"getstartoffset",children:[]},{value:"<code>getEndKey()</code>",id:"getendkey",children:[]},{value:"<code>getEndOffset()</code>",id:"getendoffset",children:[]},{value:"<code>getAnchorKey()</code>",id:"getanchorkey",children:[]},{value:"<code>getAnchorOffset()</code>",id:"getanchoroffset",children:[]},{value:"<code>getFocusKey()</code>",id:"getfocuskey",children:[]},{value:"<code>getFocusOffset()</code>",id:"getfocusoffset",children:[]},{value:"<code>getIsBackward()</code>",id:"getisbackward",children:[]},{value:"<code>getHasFocus()</code>",id:"gethasfocus",children:[]},{value:"<code>isCollapsed()</code>",id:"iscollapsed",children:[]},{value:"<code>hasEdgeWithin()</code>",id:"hasedgewithin",children:[]},{value:"<code>serialize()</code>",id:"serialize",children:[]}]},{value:"Properties",id:"properties",children:[{value:"<code>anchorKey</code>",id:"anchorkey",children:[]},{value:"<code>anchorOffset</code>",id:"anchoroffset",children:[]},{value:"<code>focusKey</code>",id:"focuskey",children:[]},{value:"<code>focusOffset</code>",id:"focusoffset",children:[]},{value:"<code>isBackward</code>",id:"isbackward",children:[]},{value:"<code>hasFocus</code>",id:"hasfocus",children:[]}]}],b={rightToc:r},l="wrapper";function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,c={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,["components"]);return Object(a.b)(l,c({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," is an Immutable ",Object(a.b)("a",c({parentName:"p"},{href:"http://facebook.github.io/immutable-js/docs/#/Record/Record"}),"Record")," that represents a selection range in the editor."),Object(a.b)("p",null,"The most common use for the ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," object is via ",Object(a.b)("inlineCode",{parentName:"p"},"EditorState.getSelection()"),",\nwhich provides the ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," currently being rendered in the editor."),Object(a.b)("h3",{id:"keys-and-offsets"},"Keys and Offsets"),Object(a.b)("p",null,"A selection range has two points: an ",Object(a.b)("strong",{parentName:"p"},"anchor")," and a ",Object(a.b)("strong",{parentName:"p"},"focus"),". (Read more on\n",Object(a.b)("a",c({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Selection#Glossary"}),"MDN"),")."),Object(a.b)("p",null,"The native DOM approach represents each point as a Node/offset pair, where the offset\nis a number corresponding either to a position within a Node's ",Object(a.b)("inlineCode",{parentName:"p"},"childNodes")," or, if the\nNode is a text node, a character offset within the text contents."),Object(a.b)("p",null,"Since Draft maintains the contents of the editor using ",Object(a.b)("inlineCode",{parentName:"p"},"ContentBlock")," objects,\nwe can use our own model to represent these points. Thus, selection points are\ntracked as key/offset pairs, where the ",Object(a.b)("inlineCode",{parentName:"p"},"key")," value is the key of the ",Object(a.b)("inlineCode",{parentName:"p"},"ContentBlock"),"\nwhere the point is positioned and the ",Object(a.b)("inlineCode",{parentName:"p"},"offset")," value is the character offset\nwithin the block."),Object(a.b)("h3",{id:"startend-vs-anchorfocus"},"Start/End vs. Anchor/Focus"),Object(a.b)("p",null,"The concept of ",Object(a.b)("strong",{parentName:"p"},"anchor")," and ",Object(a.b)("strong",{parentName:"p"},"focus")," is very useful when actually rendering\na selection state in the browser, as it allows us to use forward and backward\nselection as needed. For editing operations, however, the direction of the selection\ndoesn't matter. In this case, it is more appropriate to think in terms of\n",Object(a.b)("strong",{parentName:"p"},"start")," and ",Object(a.b)("strong",{parentName:"p"},"end")," points."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," therefore exposes both anchor/focus values and\nstart/end values. When managing selection behavior, we recommend that\nyou work with ",Object(a.b)("em",{parentName:"p"},"anchor")," and ",Object(a.b)("em",{parentName:"p"},"focus")," values to maintain selection direction.\nWhen managing content operations, however, we recommend that you use ",Object(a.b)("em",{parentName:"p"},"start"),"\nand ",Object(a.b)("em",{parentName:"p"},"end")," values."),Object(a.b)("p",null,"For instance, when extracting a slice of text from a block based on a\n",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState"),", it is irrelevant whether the selection is backward:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"var selectionState = editorState.getSelection();\nvar anchorKey = selectionState.getAnchorKey();\nvar currentContent = editorState.getCurrentContent();\nvar currentContentBlock = currentContent.getBlockForKey(anchorKey);\nvar start = selectionState.getStartOffset();\nvar end = selectionState.getEndOffset();\nvar selectedText = currentContentBlock.getText().slice(start, end);\n")),Object(a.b)("p",null,"Note that ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," itself tracks only ",Object(a.b)("em",{parentName:"p"},"anchor")," and ",Object(a.b)("em",{parentName:"p"},"focus")," values.\n",Object(a.b)("em",{parentName:"p"},"Start")," and ",Object(a.b)("em",{parentName:"p"},"end")," values are derived."),Object(a.b)("h2",{id:"overview"},"Overview"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Static Methods")),Object(a.b)("ul",{class:"apiIndex"},Object(a.b)("li",null,Object(a.b)("a",{href:"#createempty"},Object(a.b)("pre",null,"static createEmpty(blockKey)")))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Methods")),Object(a.b)("ul",{class:"apiIndex"},Object(a.b)("li",null,Object(a.b)("a",{href:"#getstartkey"},Object(a.b)("pre",null,"getStartKey()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getstartoffset"},Object(a.b)("pre",null,"getStartOffset()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getendkey"},Object(a.b)("pre",null,"getEndKey()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getendoffset"},Object(a.b)("pre",null,"getEndOffset()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getanchorkey"},Object(a.b)("pre",null,"getAnchorKey()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getanchoroffset"},Object(a.b)("pre",null,"getAnchorOffset()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getfocuskey"},Object(a.b)("pre",null,"getFocusKey()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getfocusoffset"},Object(a.b)("pre",null,"getFocusOffset()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#getisbackward"},Object(a.b)("pre",null,"getIsBackward()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#gethasfocus"},Object(a.b)("pre",null,"getHasFocus()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#iscollapsed"},Object(a.b)("pre",null,"isCollapsed()"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#hasedgewithin"},Object(a.b)("pre",null,"hasEdgeWithin(blockKey, start, end)"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#serialize"},Object(a.b)("pre",null,"serialize()")))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Properties")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Use ",Object(a.b)("a",c({parentName:"p"},{href:"http://facebook.github.io/immutable-js/docs/#/Record/Record"}),"Immutable Map API")," to\nset properties."),Object(a.b)("p",{parentName:"blockquote"},Object(a.b)("strong",{parentName:"p"},"Example")),Object(a.b)("pre",{parentName:"blockquote"},Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"const selectionState = SelectionState.createEmpty();\nconst selectionStateWithNewFocusOffset = selection.set('focusOffset', 1);\n"))),Object(a.b)("ul",{class:"apiIndex"},Object(a.b)("li",null,Object(a.b)("a",{href:"#anchorkey"},Object(a.b)("pre",null,"anchorKey"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#anchoroffset"},Object(a.b)("pre",null,"anchorOffset"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#focuskey"},Object(a.b)("pre",null,"focusKey"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#focusoffset"},Object(a.b)("pre",null,"focusOffset"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#isbackward"},Object(a.b)("pre",null,"isBackward"))),Object(a.b)("li",null,Object(a.b)("a",{href:"#hasfocus"},Object(a.b)("pre",null,"hasFocus")))),Object(a.b)("h2",{id:"static-methods"},"Static Methods"),Object(a.b)("h3",{id:"createempty"},Object(a.b)("inlineCode",{parentName:"h3"},"createEmpty()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"createEmpty(blockKey: string): SelectionState\n")),Object(a.b)("p",null,"Create a ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," object at the zero offset of the provided block key\nand ",Object(a.b)("inlineCode",{parentName:"p"},"hasFocus")," set to false."),Object(a.b)("h2",{id:"methods"},"Methods"),Object(a.b)("h3",{id:"getstartkey"},Object(a.b)("inlineCode",{parentName:"h3"},"getStartKey()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getStartKey(): string\n")),Object(a.b)("p",null,"Returns the key of the block containing the start position of the selection range."),Object(a.b)("h3",{id:"getstartoffset"},Object(a.b)("inlineCode",{parentName:"h3"},"getStartOffset()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getStartOffset(): number\n")),Object(a.b)("p",null,"Returns the block-level character offset of the start position of the selection range."),Object(a.b)("h3",{id:"getendkey"},Object(a.b)("inlineCode",{parentName:"h3"},"getEndKey()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getEndKey(): string\n")),Object(a.b)("p",null,"Returns the key of the block containing the end position of the selection range."),Object(a.b)("h3",{id:"getendoffset"},Object(a.b)("inlineCode",{parentName:"h3"},"getEndOffset()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getEndOffset(): number\n")),Object(a.b)("p",null,"Returns the block-level character offset of the end position of the selection range."),Object(a.b)("h3",{id:"getanchorkey"},Object(a.b)("inlineCode",{parentName:"h3"},"getAnchorKey()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getAnchorKey(): string\n")),Object(a.b)("p",null,"Returns the key of the block containing the anchor position of the selection range."),Object(a.b)("h3",{id:"getanchoroffset"},Object(a.b)("inlineCode",{parentName:"h3"},"getAnchorOffset()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getAnchorOffset(): number\n")),Object(a.b)("p",null,"Returns the block-level character offset of the anchor position of the selection range."),Object(a.b)("h3",{id:"getfocuskey"},Object(a.b)("inlineCode",{parentName:"h3"},"getFocusKey()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getFocusKey(): string\n")),Object(a.b)("p",null,"Returns the key of the block containing the focus position of the selection range."),Object(a.b)("h3",{id:"getfocusoffset"},Object(a.b)("inlineCode",{parentName:"h3"},"getFocusOffset()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getFocusOffset(): number\n")),Object(a.b)("p",null,"Returns the block-level character offset of the focus position of the selection range."),Object(a.b)("h3",{id:"getisbackward"},Object(a.b)("inlineCode",{parentName:"h3"},"getIsBackward()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getIsBackward(): boolean\n")),Object(a.b)("p",null,"Returns whether the focus position is before the anchor position in the document."),Object(a.b)("p",null,"This must be derived from the key order of the active ",Object(a.b)("inlineCode",{parentName:"p"},"ContentState"),", or if the selection\nrange is entirely within one block, a comparison of the anchor and focus offset values."),Object(a.b)("h3",{id:"gethasfocus"},Object(a.b)("inlineCode",{parentName:"h3"},"getHasFocus()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"getHasFocus(): boolean\n")),Object(a.b)("p",null,"Returns whether the editor has focus."),Object(a.b)("h3",{id:"iscollapsed"},Object(a.b)("inlineCode",{parentName:"h3"},"isCollapsed()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"isCollapsed(): boolean\n")),Object(a.b)("p",null,"Returns whether the selection range is collapsed, i.e. a caret. This is true\nwhen the anchor and focus keys are the same /and/ the anchor and focus offsets\nare the same."),Object(a.b)("h3",{id:"hasedgewithin"},Object(a.b)("inlineCode",{parentName:"h3"},"hasEdgeWithin()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"hasEdgeWithin(blockKey: string, start: number, end: number): boolean\n")),Object(a.b)("p",null,"Returns whether the selection range has an edge that overlaps with the specified\nstart/end range within a given block."),Object(a.b)("p",null,"This is useful when setting DOM selection within a block after contents are\nrendered."),Object(a.b)("h3",{id:"serialize"},Object(a.b)("inlineCode",{parentName:"h3"},"serialize()")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"serialize(): string\n")),Object(a.b)("p",null,"Returns a serialized version of the ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState"),". Useful for debugging."),Object(a.b)("h2",{id:"properties"},"Properties"),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Use ",Object(a.b)("a",c({parentName:"p"},{href:"http://facebook.github.io/immutable-js/docs/#/Record/Record"}),"Immutable Map API")," to\nset properties.")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"var selectionState = SelectionState.createEmpty('foo');\nvar updatedSelection = selectionState.merge({\n  focusKey: 'bar',\n  focusOffset: 0,\n});\nvar anchorKey = updatedSelection.getAnchorKey(); // 'foo'\nvar focusKey = updatedSelection.getFocusKey(); // 'bar'\n")),Object(a.b)("h3",{id:"anchorkey"},Object(a.b)("inlineCode",{parentName:"h3"},"anchorKey")),Object(a.b)("p",null,"The block containing the anchor end of the selection range."),Object(a.b)("h3",{id:"anchoroffset"},Object(a.b)("inlineCode",{parentName:"h3"},"anchorOffset")),Object(a.b)("p",null,"The offset position of the anchor end of the selection range."),Object(a.b)("h3",{id:"focuskey"},Object(a.b)("inlineCode",{parentName:"h3"},"focusKey")),Object(a.b)("p",null,"The block containing the focus end of the selection range."),Object(a.b)("h3",{id:"focusoffset"},Object(a.b)("inlineCode",{parentName:"h3"},"focusOffset")),Object(a.b)("p",null,"The offset position of the focus end of the selection range."),Object(a.b)("h3",{id:"isbackward"},Object(a.b)("inlineCode",{parentName:"h3"},"isBackward")),Object(a.b)("p",null,"If the anchor position is lower in the document than the focus position, the selection is backward. Note: The ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," is an object with no knowledge of the ",Object(a.b)("inlineCode",{parentName:"p"},"ContentState")," structure. Therefore, when updating ",Object(a.b)("inlineCode",{parentName:"p"},"SelectionState")," values, you are responsible for updating ",Object(a.b)("inlineCode",{parentName:"p"},"isBackward")," as well."),Object(a.b)("h3",{id:"hasfocus"},Object(a.b)("inlineCode",{parentName:"h3"},"hasFocus")),Object(a.b)("p",null,"Whether the editor currently has focus."))}s.isMDXComponent=!0}}]);